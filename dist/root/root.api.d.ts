import { RootModule } from './root.module';
export interface Task {
    id: string;
    title: string;
    start_date_ts: number;
    all_day?: boolean;
    end_date_ts: number;
    next_ids: string[];
    background?: string;
    backgroundHover?: string;
    color?: string;
    colorHover?: string;
    stroke?: string;
    strokeHover?: string;
    underline?: boolean;
    outlineColor?: string;
}
export declare type ViewMode = 'day' | 'week';
export interface RootApiProps {
    tasks: Task[];
    moveDependedOnResizeRight?: boolean;
    moveDependedOnResizeLeft?: boolean;
    moveDependedOnMove?: boolean;
    showTime?: boolean;
    startFromToday?: boolean;
    renderAllTasksFromStart?: boolean;
    viewMode?: ViewMode;
    showMonthMiddle?: boolean;
    monthHeight?: number;
    renderMonthBottomLine?: boolean;
    renderMonthLeftLine?: boolean;
    monthLineColor?: string;
    monthTitleFont?: string;
    monthTitleColor?: string;
    monthTitleShowYear?: boolean;
    dayHeight?: number;
    renderDayStartMonthLine?: boolean;
    dayStartMonthLine?: string;
    dayBottomLineColor?: string;
    dayColor?: string;
    dayFont?: string;
    dayTodayBackground?: string;
    dayColWidth?: number;
    monthViewColWidth?: number;
    rowHeight?: number;
    colLineColor?: string;
    colStartMonthLineColor?: string;
    rowLineColor?: string;
    rowEvenBackground?: string;
    rowOddBackground?: string;
    taskDefaultBackground?: string;
    taskDefaultHoverBackground?: string;
    taskDefaultStrokeColor?: string;
    taskDefaultHoverStrokeColor?: string;
    taskDefaultColor?: string;
    taskDefaultHoverColor?: string;
    taskDefaultOutlineColor?: string;
    taskHeight?: number;
    taskFont?: string;
    taskPadding?: number;
    taskRadius?: number;
    taskErrorStrokeColor?: string;
    minTaskWidth?: number;
    taskRenderResizeControls?: boolean;
    taskRenderResizeControlsWidth?: number;
    taskRenderResizeControlsColor?: string;
    taskRenderResizeControlsRadius?: number;
    taskRenderDepControl?: boolean;
    taskRenderDepRadius?: number;
    taskRenderDepLineColor?: string;
    taskRenderDepBackground?: string;
    taskRenderDepOffsetX?: number;
    arrowColor?: string;
    arrowActiveColor?: string;
    arrowRadius?: number;
    scrollbarXHeight?: number;
    scrollbarXBackground?: string;
    scrollbarXLineBackground?: string;
    scrollbarXLineRadius?: number;
    scrollbarYWidth?: number;
    scrollbarYBackground?: string;
    scrollbarYLineBackground?: string;
    scrollbarYLineRadius?: number;
    handleChange?(tasks: Task[]): Promise<void>;
    handleTaskClick?(task: Task): Promise<void>;
}
export declare class RootApi {
    root: RootModule;
    tasks: Task[];
    moveDependedOnResizeRight: boolean;
    moveDependedOnResizeLeft: boolean;
    moveDependedOnMove: boolean;
    showTime: boolean;
    startFromToday: boolean;
    renderAllTasksFromStart: boolean;
    viewMode: ViewMode;
    showMonthMiddle: boolean;
    monthHeight: number;
    renderMonthBottomLine: boolean;
    renderMonthLeftLine: boolean;
    monthLineColor: string;
    monthTitleFont: string;
    monthTitleColor: string;
    monthTitleShowYear: boolean;
    dayHeight: number;
    renderDayStartMonthLine: boolean;
    dayStartMonthLine: string;
    dayBottomLineColor: string;
    dayColor: string;
    dayFont: string;
    dayTodayBackground: string;
    dayColWidth: number;
    monthViewColWidth: number;
    rowHeight: number;
    colLineColor: string;
    colStartMonthLineColor?: string;
    rowLineColor: string;
    rowEvenBackground: string;
    rowOddBackground: string;
    taskDefaultBackground: string;
    taskDefaultHoverBackground: string;
    taskDefaultStrokeColor?: string;
    taskDefaultHoverStrokeColor?: string;
    taskDefaultColor: string;
    taskDefaultHoverColor: string;
    taskDefaultOutlineColor: string;
    taskHeight: number;
    taskPadding: number;
    taskRadius: number;
    taskFont: string;
    taskErrorStrokeColor?: string;
    minTaskWidth: number;
    taskRenderResizeControls: boolean;
    taskRenderResizeControlsWidth: number;
    taskRenderResizeControlsColor: string;
    taskRenderResizeControlsRadius: number;
    taskRenderDepControl: boolean;
    taskRenderDepRadius: number;
    taskRenderDepLineColor: string;
    taskRenderDepBackground: string;
    taskRenderDepOffsetX: number;
    arrowColor: string;
    arrowActiveColor: string;
    arrowRadius: number;
    scrollbarXHeight: number;
    scrollbarXBackground: string;
    scrollbarXLineBackground: string;
    scrollbarXLineRadius: number;
    scrollbarYWidth: number;
    scrollbarYBackground: string;
    scrollbarYLineBackground: string;
    scrollbarYLineRadius: number;
    handleChange?: RootApiProps['handleChange'];
    handleTaskClick?: RootApiProps['handleTaskClick'];
    constructor(root: RootModule, props: RootApiProps);
    updateTasks(tasks: Task[]): void;
    scrollToToday(): void;
    scrollToTask(id: string): void;
    updateViewMode(mode: ViewMode): void;
}
